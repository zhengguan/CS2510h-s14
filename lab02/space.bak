#lang class/0
(require class/universe)
(require 2htdp/image)

(define WIDTH  500)
(define HEIGHT 500)
 
; A World is a (new world% [Listof Junk])
(define-class world%
  (fields junks)
 
  ; -> World
  ; Advance the World
  (define (on-tick)
    (new world% (map (λ (c) (send c step)) (send this junks))))
 
  ; -> Image
  ; Draw the World
  (define (to-draw)
    (foldr (λ (c scn) (place-image (send c draw)
                                   (send c x)
                                   (send c y)
                                   scn))
           (empty-scene WIDTH HEIGHT)
           (send this junks))))
 
; A Junk is one of:
;  - Asteroid
;  - Satellite
 
; A Location is a Complex where (x,y) is represented as the complex number x+yi
; A Velocity is a Complex where (x,y) is represented as the complex number x+yi

; A Non-Negative is a non-negative Number
; A Color is a String
; A Satellite is a (new satellite% Non-Negative Color Location Velocity)
(define-class satellite%
  (fields radius color location velocity)
 
  ; -> Number
  ; The x-coordinate of the Satellite
  (define (x)
    (real-part (send this location)))
 
  ; -> Number
  ; The y-coordinate of the Satellite
  (define (y)
    (imag-part (send this location)))
 
  ; -> Image
  ; The image representing the Satellite
  (define (draw)
    (circle (send this radius) "solid" (send this color)))
 
  ; -> Satellite
  ; The next Satellite in the animation sequence
  (define (step)
    (new satellite%
         (send this radius)
         (send this color)
         (+ (send this velocity) (send this location))
         (send this velocity))))
 
(check-expect (send (new satellite% 5 "red" 50+10i 0+1i) x) 50)
(check-expect (send (new satellite% 5 "red" 50-10i 0+1i) x) 50)
(check-expect (send (new satellite% 5 "red" 50+10i 0+1i) y) 10)
(check-expect (send (new satellite% 5 "red" 50-10i 0+1i) y) -10)
(check-expect (send (new satellite% 5 "red" 50+10i 0+1i) draw)
              (circle 5 "solid" "red"))
(check-expect (send (new satellite% 5 "red" 50+10i 0+1i) step)
              (new satellite% 5 "red" 50+11i 0+1i))
(check-expect (send (new satellite% 5 "red" 50-10i 0+1i) step)
              (new satellite% 5 "red" 50-9i 0+1i))
(check-expect (send (new satellite% 5 "red" 50-10i 1) step)
              (new satellite% 5 "red" 51-10i 1))
 
; A Asteroid is a (new asteroid% Location Non-Negative Non-Negative Color Velocity)
(define-class asteroid%
  (fields width height color location velocity)
 
  ; -> Number
  ; The x-coordinate of the Asteroid
  (define (x)
    (real-part (send this location)))
 
  ; -> Number
  ; The y-coordinate of the Asteroid
  (define (y)
    (imag-part (send this location)))
 
  ; -> Image
  ; The image representing the Asteroid
  (define (draw)
    (rectangle (send this width) (send this height) "solid" (send this color)))
 
  ; -> Asteroid
  ; The next Asteroid in the animation sequence
  (define (step)
    (new asteroid%
         (send this width)
         (send this height)
         (send this color)
         (+ (send this velocity) (send this location))
         (send this velocity))))
 
(check-expect (send (new asteroid% 10 20 "blue"  50+60i 0+1i) x) 50)
(check-expect (send (new asteroid% 10 20 "blue" -50+60i 0+1i) x) -50)
(check-expect (send (new asteroid% 10 20 "blue"  50+60i 0+1i) y) 60)
(check-expect (send (new asteroid% 10 20 "blue" -50+60i 0+1i) y) 60)
(check-expect (send (new asteroid% 10 20 "blue" -50+60i 0+1i) draw)
              (rectangle 10 20 "solid" "blue"))
(check-expect (send (new asteroid% 10 20 "blue" 50+60i 0+1i) step)
              (new asteroid% 10 20 "blue" 50+61i 0+1i))
(check-expect (send (new asteroid% 10 20 "blue" -50+60i 0+1i) step)
              (new asteroid% 10 20 "blue" -50+61i 0+1i))
 
(big-bang (new world% (list (new satellite%   5    "red"   50+10i 0+1i)
                            (new satellite%  10    "red"  150+10i 1+1i)
                            (new satellite%  20    "red"  250+10i 1-1i)
                            (new satellite%  10    "red"  350+10i 1)
                            (new satellite%   5    "red"  450+10i 2+1i)
                            (new asteroid% 30 20 "blue"  50+60i 1-1i)
                            (new asteroid% 15 10 "blue" 150+60i 2+1i)
                            (new asteroid%  5  5 "blue" 250+60i 2-1i)
                            (new asteroid% 15 10 "blue" 350+60i 0+2i)
                            (new asteroid% 30 20 "blue" 450+60i 1))))

